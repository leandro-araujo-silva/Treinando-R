2 + 2
a <- 5
6 + 9
Idade  <- c( 21, 22, 24, 18, 19, 27, 22, 22, 23, 21, 23, 21)
Idade
url <- ("C:/CCEstatistica 2022/Idades.csv")
Idades1 <- read.csv (file = url , header = TRUE,
sep  =  ";", dec = "," )
url <- ("C:\Users\Windows\Downloads\Idade.csv")
url <- ("C:\Users\Windows\Idade.csv")
dados <- read.csv("C:\Users\Windows\Downloads\Idades.csv", sep = ";")
dados <- read.csv("C:\Users\Windows\Downloads\Idades.csv", sep = ";")
dados <- read.csv("C:\Users\Windows\Downloads\Idades.csv", sep = ";")
dados <- read.csv("C:\Users\Windows\Idades.csv", sep = ";")
url <- ("C:\Windows\Idades.csv")
Lertela <- scan()
Dataset <- Lertela
Dataset
boxplot (Dataset)
boxplot (Dataset, main=" ... Titulo ...")
boxplot (Dataset, main=" ... Titulo ...", col = "red",border = "blue")
pm2m
valor
(choose(21,1)*choose(14,2) + choose(21,0)*choose(14,3)) / choose(35,3);
n = (choose(21,1)*choose(14,2) + choose(21,0)*choose(14,3)) / choose(35,3);
n
dbinom(3, size=4, porb=1/5)
dbinom(3, size=4, porb=1/5)
dbinom(3, size=4, porb=1/5)
dbinom(3, size=4, prob=1/5)
tpm3 = 1 - (dbinom(7,7,prob = 0.6)+dbinom(6,7,prob = 0.6)+dbinom(5,7,prob = 0.6))
tmp3
tpm3 = 1 - (dbinom(7,7,prob = 0.6)+dbinom(6,7,prob = 0.6)+dbinom(5,7,prob = 0.6))
tpm3
dbinom(1, size = 4, prob = 0.3)
dbinom(1, size = 4, prob = 0.3)
dbinom(4, size = 10, prob= 0.25)
dbinom(2, size = 6, prob= 0.8)
dbinom(4, size = 6, prob= 1/3)
dbinom(0, size = 6, prob= 1/3)
pbinom(2, size = 6, prob = 1/3)
pbinom(2 size = 6, prob = 0.2)
pbinom(2, size = 6, prob = 0.2)
pbinom (6, size = 6, prob = 1/3) - pbinom (2, size = 6, prob = 1/3)
1 - pbinom (2, size = 6, prob = 1/3)
dbinom(4, size = 6, prob = 1/2)
1 - pbinom(1, size =6, prob= 1/2)
pbinom(3, size = 6, prob = 1/2)
dbinom(4, size = 6, prob = 1/2)
dpois(2, lamba = 5)
dpois(2, lambda = 5)
ppois(2, lambda = 6)
ppois(19, lambda = 23, lower.tail = F)
1 - dpois(19, lambda = 23)
1 - ppois(19, lambda = 23)
qpois(0.80, lambda=23)
dpois(5, lambda= 8)
ppois (2, taxa, lower.tail = F)
taxa = 2/50000 * 112500
ppois (2, taxa, lower.tail = F)
resp = pbinom(5, size = 40, prob=0.12) - pbinom(2, size = 40, prob = 0.12)
resp
resp1 = 1 - pbinom(1, size = 40, prob = 0.12)
resp1
resp2 = pbinom(3, size = 40, prob = 0.12)
resp2
pbinom(38, size = 40, prob = 0.12, lower.tail = F)
1 - pbinom(38, size = 40, prob= 0.12)
1 - pbinom(38, size = 40, prob= 0.12)
pbinom(38, size = 40, prob= 0.12)
1 - pbinom(38, size = 40, prob= 0.88)
pbinom(39, size = 40, prob = 0.88)
dpois(4, lambda = 3)
dpois(0, lambda = 3)
dpois(20, lambda = 21)
dbinom(15, size = 15, prob = 0.75)
15*0.75
var = 15*075*0.25
desvio = sqrt(var)
var = 15*075*0.25
desvio = sqrt(var)
desvio
var = 15*075*0.25
desvio = sqrt(var)
desvio
var = 15*0.75*0.25
desvio = sqrt(var)
desvio
dbinom(15, size = 15, prob = 0.75)
dbinom(10, size = 15, prob = 0.75)
pbinom(12, size = 15, prob = 0.75, lower.tail = F)
dbinom(4, size = 6, prob = 1/2)
binom(1, size = 6, prob = 1/2, lower.tail = F)
pbinom(1, size = 6, prob = 1/2, lower.tail = F)
pbinom(3, size = 6, prob = 1/2)
pbinom(1, size = 10, prob = 0.15)
dbinom(3, size = 5, prob = 0.70)
dpois(3, lambda = 6)
ppois(3, lambda = 6)
sqrt(6)
ppois(4, lambda = 10)
ppois(2, lambda = 5, lower.tail = F)
1 - ppois(2, lambda = 5)
dpois(50, lambda = 40)
dpois(6.25, lambda = 5)
dpois(6,25, lambda = 5)
pois(625/100, lambda = 5)
dpois(625/100, lambda = 5)
dbinom(3, size = 5, prob = 1/2)
pbinom(2, size = 5, prob = 1/2, lower.tail = F)
pbinom(3, size = 5, prob = 1/2, lower.tail = F)
1 - pbinom(2, size = 5, prob = 1/2)
pbinom(2, size = 5, prob = 1/2, lower.tail = F)
pbinom(4, size = 8, prob = 0.6, lower.tail = FALSE)
pnorm(3600, mean = 4000, sd = 200) - pnorm(4250, mean = 4000, sd = 200)
pnorm(4250, mean = 4000, sd = 200) - pnorm(3600, mean = 4000, sd = 200)
pnorm(4636, mean = 4000, sd = 200, lower.tail = F)
pnorm(3400, mean = 4000, sd = 200)
pnorm(990, mean = 1000, sd = 10)
pnorm(50, mean = 45, sd = 20, lower.tail = F)
m30 = pnorm(30, mean = 45, sd = 20)
m30 = pnorm(30, mean = 45, sd = 20)
m30
m30 + m50
m50 = pnorm(50, mean = 45, sd = 20, lower.tail = F)
m30 = pnorm(30, mean = 45, sd = 20)
m30
m30 + m50
m50 = pnorm(50, mean = 45, sd = 20, lower.tail = F)
m30 = pnorm(30, mean = 45, sd = 20)
m30
m30 + m50
c30 = m30 * 50
c50 = m50 * 50
tc = c30 + c50
m50 = pnorm(50, mean = 45, sd = 20, lower.tail = F)
m30 = pnorm(30, mean = 45, sd = 20)
m30
m30 + m50
c30 = m30 * 50
c30
c50 = m50 * 50
c50
tc = c30 + c50
tc
pnorm(2.03, mean = 2, sd = 0.01, lower.tail = F)
pnorm(2.03, mean = 2, sd = 0.01, lower.tail = F)
pnorm(2.03, mean = 2, sd = 0.01)
qnorm(0.05, mean = 8, sd = 1.8)
pnorm(105, mean = 100, sd = 10) - pnorm(95, mean = 95, sd = 10)
pp = pnorm(105, mean = 100, sd = 10) - pnorm(95, mean = 95, sd = 10)
r = pp * 16
r
pnorm(105, mean = 100, sd = 10) - pnorm(95, mean = 100, sd = 10)
pp = pnorm(105, mean = 100, sd = 10) - pnorm(95, mean = 100, sd = 10)
r = pp * 16
r
pp = pnorm(105, mean = 100, sd = 10) - pnorm(95, mean = 100, sd = 10)
pp
pnorm(13, mean = 10, sd = 2, lower.tail = F)
pnorm(11, mean = 10, sd = 2) - pnorm(9, mean = 10, sd = 2)
qnorm(0.98, mean = 10, sd = 2)
b = pnorm(450, mean = 70, sd = 15, lower.tail = F)
b
b*6
pexp(24000, rate = 1/28500)
pexp(10, rate = 1/5)
pexp(10, rate = 1/5) - pexp(5, rate = 1/5)
pexp(2000, rate = 1/4000, lower.tail = F)
pnorm(170000, mean = 150000, sd = 5000)
pnorm(165000, mean = 150000, sd = 5000) - pnorm(140000, mean = 150000, sd = 5000)
qnorm(0.002, mean = 150000, sd = 5000)
15. A capacidade máxima de um elevador é 500kg. Se a distribuição dos pesos de cada usuário é
l = pnorm(500, mean = 70, sd = 10, lower.tail = F)
l
l * 7
pexp(5, rate = 1/5, lower.tail = F)
pexp(4, rate = 1/5)
pexp(8, rate = 1/5) - pexp(3, rate = 1/5)
desvio = sqrt(14)
desvio
alfa = 0.10
desvio = sqrt(14)
desvio
media = 9
n = 120
zc = qnorm(1 - alfa/2, 0, 1)
zc = round(zc,2)
zc
erro = zc * desvio / sqrt(n)
erro = round(erro,2)
erro
alfa = 0.10
desvio = sqrt(14)
desvio
media = 9
n = 120
zc = qnorm(1 - alfa/2, 0, 1)
zc = round(zc,2)
zc
erro = zc * desvio / sqrt(n)
erro = round(erro,2)
erro
alfa = 0.10
desvio = sqrt(14)
desvio
media = 9
n = 120
zc = qnorm(1 - alfa/2, 0, 1)
zc = round(zc,2)
zc
erro = zc * desvio / sqrt(n)
erro = round(erro,2)
erro
cat ("[", media - erro, ",", media + erro, "]")
valores <- c(80, 75, 71, 82, 77, 64, 78, 67, 81, 79)
alfa = 0.02
n = length(valores)
desvio = sd(valores)
media = mean(valores)
tc = qt(p = 1 - alfa/2, df = n-1)
tc = round(tc,3)
tc
erro = tc * desvio/sqrt(n)
erro = round(erro,3)
erro
cat("[", media - erro, ",", media + erro, "]")
valores <- c(80, 75, 71, 82, 77, 64, 78, 67, 81, 79)
valores
alfa = 0.02
n = length(valores)
desvio = sd(valores)
media = mean(valores)
tc = qt(p = 1 - alfa/2, df = n-1)
tc = round(tc,3)
tc
erro = tc * desvio/sqrt(n)
erro = round(erro,3)
erro
cat("[", media - erro, ",", media + erro, "]")
valores <- c(80, 75, 71, 82, 77, 64, 78, 67, 81, 79)
valores
alfa = 0.02
n = length(valores)
desvio = sd(valores)
media = mean(valores)
media
tc = qt(p = 1 - alfa/2, df = n-1)
tc = round(tc,3)
tc
erro = tc * desvio/sqrt(n)
erro = round(erro,3)
erro
cat("[", media - erro, ",", media + erro, "]")
t.test(valores)
valores <- c(80, 75, 71, 82, 77, 64, 78, 67, 81, 79)
valores
alfa = 0.02
n = length(valores)
desvio = sd(valores)
media = mean(valores)
media
tc = qt(p = 1 - alfa/2, df = n-1)
tc = round(tc)
tc
erro = tc * desvio/sqrt(n)
erro = round(erro)
erro
cat("[", media - erro, ",", media + erro, "]")
t.test(valores)
valores <- c(80, 75, 71, 82, 77, 64, 78, 67, 81, 79)
valores
alfa = 0.02
n = length(valores)
desvio = sd(valores)
media = mean(valores)
media
tc = qt(p = 1 - alfa/2, df = n-1)
tc = round(tc,3)
tc
erro = tc * desvio/sqrt(n)
erro = round(erro,3)
erro
cat("[", media - erro, ",", media + erro, "]")
t.test(valores)
valores <- c(80, 75, 71, 82, 77, 64, 78, 67, 81, 79)
valores
alfa = 0.02
n = length(valores)
desvio = sd(valores)
media = mean(valores)
media
tc = qt(p = 1 - alfa/2, df = n-1)
tc = round(tc,3)
tc
erro = tc * desvio/sqrt(n)
erro = round(erro,3)
erro
cat("[", media - erro, ",", media + erro, "]")
t.test(valores, conf = 0.98)
sucesso =  0.65 * 3500
prop.test(x = sucess0, n = 3500, conf.level = 95/100)
sucesso =  0.65 * 3500
sucesso
sucesso =  0.65 * 3500
sucesso
prop.test(x = 2275, n = 3500, conf.level = 95/100)
prop.test(x = 0.65*3500, n = 3500, conf.level = 95/100)
setwd("C:/Users/Windows/Documents/GitHub/Treinando-R/Aprendendo3")
imc = read.table(file="IMC.csv", header = TRUE, sep = ";", dec = ".")
imc
result <- aov(imc$peso - factor(imc$sexo))
result <- aov(imc$peso ~ factor(imc$sexo))
result <- aov(imc$Peso ~ factor(imc$Sexo))
setwd("C:/Users/Windows/Documents/GitHub/Treinando-R/Aprendendo3")
fornecedores = read.table(file="Fornecedores.csv", header = TRUE, sep = ";", dec = ".")
fornecedores
fornecedores = read.table(file="Fornecedores.csv")
fornecedores = read.table(file="fornecedores.csv", header = TRUE, sep = ";", dec = ".")
fornecedores
url <- "Fornecedores.csv"
fornecedores <- read.csv(url, header = TRUE, sep = ";", dec = ".")
fornecedores
url <- "fornecedores.csv"
fornecedores <- read.csv(url, header = TRUE, sep = ";", dec = ".")
fornecedores
library(readxl)
fornecedores <- read_xlsx("fornecedores.xlsx")
fornecedores
result <- aov(fornecedores$Quantidade ~ factor(fornecedores$Fornecedores))
anova(result)
TukeyHSD(result)
fabricas <- read_xlsx("fabricas.xlsx")
fabricas
fabricas <- read_xlsx("fabricas.xlsx")
fabricas
H0: u1 = u2 = u3 = u4 = u
result <- aov(fabricas$Valores ~ factor(Fabricas$Fabricas))
fabricas <- read_xlsx("fabricas.xlsx")
fabricas
result <- aov(fabricas$Valores ~ factor(Fabricas$Fabricas))
result <- aov(fabricas$Valores ~ factor(fabricas$Fabricas))
anova(result)
TukeyHSD(result)
amostra <- read_xlsx("fabricas.xlsx")
amostra
amostra <- read_xlsx("amostra.xlsx")
amostra
amostra <- read_xlsx("amostra.xlsx")
amostra
url <- ("amostra.csv")
amostra <- read.csv(url, header = TRUE, sep = ";", dec = ".")
setwd("C:/Users/Windows/Documents/GitHub/Treinando-R/Aprendendo3")
url <- ("C:/Users/Windows/Documents/GitHub/Treinando-R/Aprendendo3/amostra.csv")
amostra <- read.csv(url, header = TRUE, sep = ";", dec = ".")
Reg = read.table(file = "C:/Users/Windows/Documents/GitHub/Treinando-R/Aprendendo3/amostra.csv",
header = TRUE, sep = ";", dec = ",")
