2 + 2
a <- 5
6 + 9
Idade  <- c( 21, 22, 24, 18, 19, 27, 22, 22, 23, 21, 23, 21)
Idade
url <- ("C:/CCEstatistica 2022/Idades.csv")
Idades1 <- read.csv (file = url , header = TRUE,
sep  =  ";", dec = "," )
url <- ("C:\Users\Windows\Downloads\Idade.csv")
url <- ("C:\Users\Windows\Idade.csv")
dados <- read.csv("C:\Users\Windows\Downloads\Idades.csv", sep = ";")
dados <- read.csv("C:\Users\Windows\Downloads\Idades.csv", sep = ";")
dados <- read.csv("C:\Users\Windows\Downloads\Idades.csv", sep = ";")
dados <- read.csv("C:\Users\Windows\Idades.csv", sep = ";")
url <- ("C:\Windows\Idades.csv")
Lertela <- scan()
Dataset <- Lertela
Dataset
boxplot (Dataset)
boxplot (Dataset, main=" ... Titulo ...")
boxplot (Dataset, main=" ... Titulo ...", col = "red",border = "blue")
setwd("C:/Users/Windows/Documents/GitHub/Treinando-R/Aprendendendo-r")
url <- "ENEM_CPP.csv"
dados <- read.csv(url, header = TRUE, sep = ";", dec = ".")
View(dados)
# Deletar a coluna "CO_ESCOLA" do conjunto de dados (substituindo a tabela original)
dados <- dados[, -which(names(dados) == "CO_ESCOLA")]
print(dados)
View(dados)
# Criar a tabela de frequências cruzadas entre as variáveis sexo e língua estrangeira
tabela_frequencias <- table(dados$TP_SEXO, dados$TP_LINGUA)
print(tabela_frequencias)
# Gerar o gráfico de barras sexo x língua estrangeira
barplot(tabela_frequencias, beside = TRUE, col = c("lightblue", "lightgreen"),
legend = rownames(tabela_frequencias), xlab = "Sexo", ylab = "Frequência",
main = "Frequência de Sexo por Língua Estrangeira")
barplot(tabela_frequencias, beside = TRUE, col = c("lightblue", "lightgreen"),
legend = rownames(tabela_frequencias), xlab = "Sexo", ylab = "Frequência",
main = "Frequência de Sexo por Língua Estrangeira")
barplot(tabela_frequencias, beside = TRUE, col = c("lightblue", "lightgreen"),
legend = TRUE, args.legend = list(x = "topright", bty = "n", inset = c(0, -0.15)),
xlab = "Sexo", ylab = "Frequência", main = "Frequência de Sexo por Língua Estrangeira")
legend("topright", legend = rownames(tabela_frequencias), fill = c("lightblue", "lightgreen"))
barplot(tabela_frequencias, beside = TRUE, col = c("lightblue", "lightgreen"),
legend = TRUE, args.legend = list(x = "topright", bty = "n", inset = c(0, -0.15)),
xlab = "Sexo", ylab = "Frequência", main = "Frequência de Sexo por Língua Estrangeira")
tabela_frequencias2 <- table(dados$TP_SEXO, dados$TP_LINGUA)
print(tabela_frequencias2)
# Estado civil x Sexo
print(tabela_frequencias2)
url <- "ENEM_CPP.csv"
dados <- read.csv(url, header = TRUE, sep = ";", dec = ".")
dados
str(dados)
# Deletar a coluna "CO_ESCOLA" do conjunto de dados (substituindo a tabela original)
dados <- dados[, -which(names(dados) == "CO_ESCOLA")]
# Exibir a tabela após deletar a coluna "carb"
print(dados)
# Criar a tabela de frequências cruzadas entre as variáveis sexo e língua estrangeira
tabela_frequencias <- table(dados$TP_SEXO, dados$TP_LINGUA)
# Exibir a tabela de frequências cruzadas
print(tabela_frequencias)
# Gerar o gráfico de barras sexo x língua estrangeira
barplot(tabela_frequencias, beside = TRUE, col = c("lightblue", "lightgreen"),
legend = TRUE, args.legend = list(x = "topright", bty = "n", inset = c(0, -0.15)),
xlab = "Sexo", ylab = "Frequência", main = "Frequência de Sexo por Língua Estrangeira")
# Estado civil x Sexo
tabela_frequencias2 <- table(dados$TP_SEXO, dados$TP_ESTADO_CIVIL)
# Exibir a tabela de frequências cruzadas
print(tabela_frequencias2)
# Gerar o gráfico de barras sexo x língua estrangeira
barplot(tabela_frequencias2, beside = TRUE, col = c("lightblue", "lightgreen"),
legend = FALSE, xlab = "Sexo", ylab = "Frequência",
main = "Frequência de Sexo por Língua Estrangeira")
View(dados)
# Criar a tabela de frequências cruzadas entre as variáveis estado civil e sexo
tabela_frequencias2 <- table(dados$TP_ESTADO_CIVIL, dados$TP_SEXO)
url <- "ENEM_CPP.csv"
dados <- read.csv(url, header = TRUE, sep = ";", dec = ".")
dados
str(dados)
# Deletar a coluna "CO_ESCOLA" do conjunto de dados (substituindo a tabela original)
dados <- dados[, -which(names(dados) == "CO_ESCOLA")]
# Exibir a tabela após deletar a coluna "carb"
print(dados)
# Criar a tabela de frequências cruzadas entre as variáveis sexo e língua estrangeira
tabela_frequencias <- table(dados$TP_SEXO, dados$TP_LINGUA)
# Exibir a tabela de frequências cruzadas
print(tabela_frequencias)
# Gerar o gráfico de barras sexo x língua estrangeira
barplot(tabela_frequencias, beside = TRUE, col = c("lightblue", "lightgreen"),
legend = TRUE, args.legend = list(x = "topright", bty = "n", inset = c(0, -0.15)),
xlab = "Sexo", ylab = "Frequência", main = "Frequência de Sexo por Língua Estrangeira")
# Criar a tabela de frequências cruzadas entre as variáveis estado civil e sexo
tabela_frequencias2 <- table(dados$TP_ESTADO_CIVIL, dados$TP_SEXO)
# Exibir a tabela de frequências cruzadas
print(tabela_frequencias2)
# Gerar o gráfico de barras estado civil x sexo
barplot(tabela_frequencias2, beside = TRUE, col = c("lightblue", "lightgreen"),
legend = TRUE, args.legend = list(x = "topright", bty = "n", inset = c(0, -0.15)),
xlab = "Estado Civil", ylab = "Frequência",
main = "Frequência de Estado Civil por Sexo")
url <- "ENEM_CPP.csv"
dados <- read.csv(url, header = TRUE, sep = ";", dec = ".")
dados
str(dados)
# Deletar a coluna "CO_ESCOLA" do conjunto de dados (substituindo a tabela original)
dados <- dados[, -which(names(dados) == "CO_ESCOLA")]
# Exibir a tabela após deletar a coluna "carb"
print(dados)
# Criar a tabela de frequências cruzadas entre as variáveis sexo e língua estrangeira
tabela_frequencias <- table(dados$TP_SEXO, dados$TP_LINGUA)
# Exibir a tabela de frequências cruzadas
print(tabela_frequencias)
# Gerar o gráfico de barras sexo x língua estrangeira
barplot(tabela_frequencias, beside = TRUE, col = c("lightblue", "lightgreen"),
legend = TRUE, args.legend = list(x = "topright", bty = "n", inset = c(0, -0.15)),
xlab = "Sexo", ylab = "Frequência", main = "Frequência de Sexo por Língua Estrangeira")
# Criar a tabela de frequências cruzadas entre as variáveis estado civil e sexo
tabela_frequencias2 <- table(dados$TP_SEXO, dados$TP_ESTADO_CIVIL)
# Exibir a tabela de frequências cruzadas
print(tabela_frequencias2)
# Gerar o gráfico de barras estado civil x sexo
barplot(tabela_frequencias2, beside = TRUE, col = c("lightblue", "lightgreen"),
legend = TRUE, args.legend = list(x = "topright", bty = "n", inset = c(0, -0.15)),
xlab = "Estado Civil", ylab = "Frequência",
main = "Frequência de Estado Civil por Sexo")
library(ggplot2)
View(dados)
ggplot(dados, aes(x = NU_NOTA_CN)) +
geom_histogram(binwidth = 50, color = "black", fill = "lightblue") +
labs(title = "Histograma da Nota de Natureza", x = "Nota de Natureza", y = "Frequência")
ggplot(dados, aes(x = NU_NOTA_CH)) +
geom_histogram(binwidth = 50, color = "black", fill = "lightblue") +
labs(title = "Histograma da Nota de Humanas", x = "Nota de Humanas", y = "Frequência")
ggplot(dados, aes(x = NU_NOTA_LC)) +
geom_histogram(binwidth = 50, color = "black", fill = "lightblue") +
labs(title = "Histograma da Nota de Linguagem", x = "Nota de Linguagem", y = "Frequência")
Histograma da nota de matemática
ggplot(dados, aes(x = NU_NOTA_MT)) +
geom_histogram(binwidth = 50, color = "black", fill = "lightblue") +
labs(title = "Histograma da Nota de Matemática", x = "Nota de Matemática", y = "Frequência")
ggplot(dados, aes(x = NU_NOTA_REDACAO)) +
geom_histogram(binwidth = 50, color = "black", fill = "lightblue") +
labs(title = "Histograma da Nota de Redação", x = "Nota de Redação", y = "Frequência")
ggplot(dados, aes(x = "", y = NU_NOTA_ENEM)) +
geom_boxplot(fill = "lightgreen", color = "black") +
labs(title = "Boxplot da Nota Final no ENEM", x = "Nota Final no ENEM", y = "Nota")
ggplot(dados, aes(x = NU_NOTA_REDACAO)) +
geom_histogram(binwidth = 50, color = "black", fill = "lightblue") +
labs(title = "Histograma da Nota de Redação", x = "Nota de Redação", y = "Frequência")
ggplot(dados, aes(x = "", y = NU_NOTA_ENEM)) +
geom_boxplot(fill = "lightgreen", color = "black") +
labs(title = "Boxplot da Nota Final no ENEM", x = "Nota Final no ENEM", y = "Nota")
ggplot(dados, aes(x = "", y = NU_NOTA_CN)) +
geom_boxplot(fill = "lightgreen", color = "black") +
labs(title = "Boxplot da Nota de Natureza", x = "Nota de Natureza", y = "Nota")
tabela_frequencias_qualitativas <- table(dados$TP_SEXO, dados$TP_LINGUA)
print(tabela_frequencias_qualitativas)
barplot(tabela_frequencias_qualitativas, beside = TRUE, col = c("lightblue", "lightgreen"),
legend = TRUE, args.legend = list(x = "topright", bty = "n", inset = c(0, -0.15)),
xlab = "Sexo", ylab = "Frequência",
main = "Relação entre Sexo e Língua Estrangeira")
ggplot(dados, aes(x = TP_ESTADO_CIVIL, y = NU_NOTA_ENEM, fill = TP_ESTADO_CIVIL)) +
geom_boxplot() +
labs(title = "Boxplot da Nota Final no ENEM por Estado Civil", x = "Estado Civil", y = "Nota Final no ENEM")
ggplot(dados, aes(x = TP_ESTADO_CIVIL, y = NU_NOTA_ENEM, fill = TP_ESTADO_CIVIL)) +
geom_boxplot() +
labs(title = "Boxplot da Nota Final no ENEM por Estado Civil", x = "Estado Civil", y = "Nota Final no ENEM")
ggplot(dados, aes(x = NU_NOTA_CN, y = NU_NOTA_CH)) +
geom_point(color = "blue") +
labs(title = "Gráfico de Dispersão entre Nota de Natureza e Nota de Humanas", x = "Nota de Natureza", y = "Nota de Humanas")
setwd("C:/Users/Windows/Documents/GitHub/Treinando-R/Aprendendendo-r")
url <- "C:/Users/Windows/Documents/GitHub/Treinando-R/Aprendendendo-r/IMC.csv"
data <- read.csv(url, header = TRUE, sep = ";", dec = ".")
View(data)
data
data$IMC <- as.numeric(gsub(",", ".", data.IMC))
str(data)
all_numeric <- suppressWarnings(!is.na(as.numeric(data$IMC)))
any_non_numeric <- any(!all_numeric)
if (any_non_numeric) {
non_numeric_values <- unique(daTA$IMC[!all_numeric])
print(paste("Valores não numéricos encontrados na coluna 'IMC':", paste(non_numeric_values, collapse = ", ")))
}
if (any_non_numeric) {
non_numeric_values <- unique(data$IMC[!all_numeric])
print(paste("Valores não numéricos encontrados na coluna 'IMC':", paste(non_numeric_values, collapse = ", ")))
}
data$IMC <- as.numeric(gsub(",", ".", data$IMC))
str(dados)
str(data)
print(data)
data$IMC <- round(data$IMC, 2)
print(data)
url <- "C:/Users/Windows/Documents/GitHub/Treinando-R/Aprendendendo-r/IMC.csv"
data <- read.csv(url, header = TRUE, sep = ";", dec = ".")
data
str(data)
#Verifique se a coluna "mpg" contém apenas valores numéricos (ou vazios)
all_numeric <- suppressWarnings(!is.na(as.numeric(data$IMC)))
# Verifique se há valores não numéricos na coluna
any_non_numeric <- any(!all_numeric)
# Se houver valores não numéricos, identifique-os
if (any_non_numeric) {
non_numeric_values <- unique(data$IMC[!all_numeric])
print(paste("Valores não numéricos encontrados na coluna 'IMC':", paste(non_numeric_values, collapse = ", ")))
}
# Converter atributos para numérico e substituir vírgulas por pontos
data$IMC <- as.numeric(gsub(",", ".", data$IMC))
data$Peso <- as.numeric(gsub(",", ".", data$Peso))
dados$IMC <- round(data$Peso, 2)
data$Peso <- round(data$Peso, 2)
str(data)
data$IMC <- round(data$IMC, 2)
print(data)
library(ggplot2)
ggplot(data, aes(x = Sexo, fill = sexo)) +
geom_bar() +
labs(title = "Distribuição por Sexo", x = "Sexo", y = "Frequência")
ggplot(data, aes(x = Sexo, fill = Sexo)) +
geom_bar() +
labs(title = "Distribuição por Sexo", x = "Sexo", y = "Frequência")
# Histograma da idade
ggplot(data, aes(x = Idade)) +
geom_histogram(binwidth = 1, color = "black", fill = "lightblue") +
labs(title = "Histograma da Idade", x = "Idade", y = "Frequência")
ggplot(data, aes(x = Idade)) +
geom_histogram(binwidth = 2, color = "black", fill = "lightblue") +
labs(title = "Histograma da Idade", x = "Idade", y = "Frequência")
ggplot(data, aes(x = Idade)) +
geom_histogram(binwidth = 0.5, color = "black", fill = "lightblue") +
labs(title = "Histograma da Idade", x = "Idade", y = "Frequência")
ggplot(data, aes(x = Peso)) +
geom_histogram(binwidth = 5, color = "black", fill = "lightblue") +
labs(title = "Histograma do Peso", x = "Peso", y = "Frequência")
ggplot(data, aes(x = Altura)) +
geom_histogram(binwidth = 0.05, color = "black", fill = "lightblue") +
labs(title = "Histograma da Altura", x = "Altura", y = "Frequência")
ggplot(data, aes(x = Altura)) +
geom_histogram(binwidth = 1, color = "black", fill = "lightblue") +
labs(title = "Histograma da Altura", x = "Altura", y = "Frequência")
ggplot(data, aes(x = Altura)) +
geom_histogram(binwidth = 0.05, color = "black", fill = "lightblue") +
labs(title = "Histograma da Altura", x = "Altura", y = "Frequência")
ggplot(data, aes(x = IMC)) +
geom_histogram(binwidth = 1, color = "black", fill = "lightblue") +
labs(title = "Histograma do IMC", x = "IMC", y = "Frequência")
ggplot(data, aes(y = Idade)) +
geom_boxplot(fill = "lightgreen", color = "black") +
labs(title = "Boxplot da Idade", y = "Idade")
ggplot(data, aes(y = Peso)) +
geom_boxplot(fill = "lightgreen", color = "black") +
labs(title = "Boxplot do Peso", y = "Peso")
ggplot(data, aes(y = Altura)) +
geom_boxplot(fill = "lightgreen", color = "black") +
labs(title = "Boxplot da Altura", y = "Altura")
# Boxplot do IMC
ggplot(data, aes(y = IMC)) +
geom_boxplot(fill = "lightgreen", color = "black") +
labs(title = "Boxplot do IMC", y = "IMC")
